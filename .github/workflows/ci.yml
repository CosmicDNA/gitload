name: CI/CD Pipeline for Gitload

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache APT packages
        uses: actions/cache@v3
        with:
          path: |
            /tmp/apt-packages
            ~/.cache/
            ~/.config/
          key: ${{ runner.os }}-apt-cache-${{ hashFiles('.github/workflows/ci.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-cache-

      - name: Prepare APT package cache
        run: |
          mkdir -p /tmp/apt-packages
          sudo apt-get update
          sudo apt-get install -y expect keychain debhelper
          sudo apt-get clean
          tar -cvf /tmp/apt-packages/apt-packages.tar /var/cache/apt/archives

      - name: Restore APT packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p /var/cache/apt/archives
          if [ -f /tmp/apt-packages/apt-packages.tar ]; then
            sudo tar -xvf /tmp/apt-packages/apt-packages.tar -C /
          fi
          sudo apt-get update
          sudo apt-get install -y expect keychain debhelper

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential devscripts lintian fakeroot debhelper

      - name: Update version
        id: update_version
        run: |
          output=$(bash ci-scripts/update_version.sh)
          version=$(echo "$output" | grep -oP 'New version: \K[^\s]+')
          # echo "$output"
          # echo "version for release: $version"

      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add debian/changelog
          git commit -m "Update version in debian/changelog"
          git push origin main

      - name: Build Debian package
        run: |
          cd ${GITHUB_WORKSPACE}
          debuild -us -uc

      - name: Move .deb files
        run: |
          mv ../*.deb ./

      - name: Upload Debian package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: gitload-package
          path: ./*.deb

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: gitload-package

      - name: Extract version from .deb filename
        id: extract_version
        run: |
          deb_file=$(ls ./*.deb | head -n 1)
          echo "DEB_FILE=$deb_file" >> $GITHUB_ENV
          version=$(echo "$deb_file" | grep -oP '_(\d+\.\d+\.\d+)_')
          version=${version//_/}
          echo "EXTRACTED_VERSION=$version" >> $GITHUB_ENV
          echo "Extracted version: $version"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: "./*.deb"
          tag_name: "v${{ env.EXTRACTED_VERSION }}"
          name: "Release v${{ env.EXTRACTED_VERSION }}"
          body: "Automatically generated release from GitHub Actions CI/CD pipeline"
          draft: false
          prerelease: false
